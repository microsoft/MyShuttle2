{  
   "$schema":"http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
	"parameters": {
		"siteName": {
			"type": "string",
			"metadata": {
				"description": "Name of azure web app"
			}
		},
		"administratorLogin": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Database administrator login name"
			}
		},
		"administratorLoginPassword": {
			"type": "securestring",
			"minLength": 8,
			"metadata": {
				"description": "Database administrator password"
			}
		},
		"databaseDTU": {
			"type": "int",
			"allowedValues": [
				50,
				100
			],
			"defaultValue": 50,
			"metadata": {
				"description": "Azure database for MySQL pricing tier : 50 DTU , 100 DTU"
			}
		},
		"databaseSkuName": {
			"type": "string",
			"allowedValues": [
				"MYSQLB100",
				"MYSQLB50"
			],
			"defaultValue": "MYSQLB50",
			"metadata": {
				"description": "Azure database for MySQL sku name : MYSQLB100 (Basic 100 DTU tier) or MYSQLB50 (Basic 50 DTU tier)"
			}
		},
		"databaseSkuSizeMB": {
			"type": "int",
			"allowedValues": [
				102400,
				51200
			],
			"defaultValue": 51200,
			"metadata": {
				"description": "Azure database for MySQL Sku Size "
			}
		},
		"databaseSkuTier": {
			"type": "string",
			"allowedValues": [
				"Basic"
			],
			"defaultValue": "Basic",
			"metadata": {
				"description": "Azure database for MySQL pricing tier"
			}
		},
		"mysqlVersion": {
			"type": "string",
			"allowedValues": [
				"5.6",
				"5.7"
			],
			"defaultValue": "5.7",
			"metadata": {
				"description": "MySQL version"
			}
		},
		"registryName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Azure Container Registry"
			}
		},
		"registryResourceGroup": {
			"type": "string",
			"defaultValue": "[resourceGroup().name]",
			"metadata": {
				"description": "Name of the Azure Container Registry resource group (if in another resource group)"
			}
		},
		"dockerImagePort": {
			"type": "int",
			"defaultValue": 8080,
			"metadata": {
				"description": "Container port to expose"
			}
		},
		"dockerImageName": {
			"type": "string",
			"defaultValue": "web",
			"metadata": {
				"description": "Docker image name"
			}
		},
		"dockerImageTag": {
			"type": "string",
			"defaultValue": "latest",
			"metadata": {
				"description": "Tag of the docker image to deploy"
			}
		},
		"slotName": {
			"type": "string",
			"defaultValue": "blue",
			"metadata": {
				"description": "Name of the testing slot"
			}
		}
	},
	"variables": {
		"databaseName": "MyShuttleDb",
		"serverName": "[concat(parameters('siteName'), '-mysqlserver')]",
		"hostingPlanName": "[concat(parameters('siteName'), '-serviceplan')]",
		"prodAppInsightsName": "[concat(parameters('siteName'), '-Insights')]",
		"slotAppInsightsName": "[concat(parameters('siteName'), '-', parameters('slotName'), 'Insights')]",
		"acrResourceGroup": "[if(equals(parameters('registryResourceGroup'), json('null')), resourceGroup().name, parameters('registryResourceGroup'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Web/sites",
			"name": "[parameters('siteName')]",
			"properties": {
				"siteConfig": {
					"appSettings": [
						{
							"name": "WEBSITES_PORT",
							"value": "[parameters('dockerImagePort')]"
						},
						{
							"name": "DOCKER_CUSTOM_IMAGE_NAME",
							"value": "[concat(parameters('registryName'), '.azurecr.io/', parameters('dockerImageName'))]"
						},
						{
							"name": "DOCKER_REGISTRY_SERVER_URL",
							"value": "[concat('https://', parameters('registryName'), '.azurecr.io')]"
						},
						{
							"name": "DOCKER_REGISTRY_SERVER_USERNAME",
							"value": "[parameters('registryName')]"
						},
						{
							"name": "DOCKER_REGISTRY_SERVER_PASSWORD",
							"value": "[listCredentials(resourceId(variables('acrResourceGroup'), 'Microsoft.ContainerRegistry/registries', parameters('registryName')), '2017-03-01').passwords[0].value]"
						},
						{
							"name": "APPLICATION_INSIGHTS_IKEY",
							"value": "[reference(concat('Microsoft.Insights/components/', variables('prodAppInsightsName')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "MyShuttleDbServer",
							"value": "[concat(variables('serverName'), '.mysql.database.azure.com')]"
						},
						{
							"name": "MyShuttleDbUser",
							"value": "[concat(parameters('administratorLogin'), '@', variables('serverName'))]"
						},
						{
							"name": "MyShuttleDbPassword",
							"value": "[parameters('administratorLoginPassword')]"
						},
						{
							"name": "MyShuttleDbUseSSL",
							"value": "true"
						}
					]
				},
				"name": "[parameters('siteName')]",
				"serverFarmId": "[variables('hostingPlanName')]",
				"hostingEnvironment": ""
			},
			"resources": [
				{
					"apiVersion": "2016-08-01",
					"name": "slotconfignames",
					"type": "config",
					"dependsOn": [
						"[resourceId('Microsoft.Web/Sites/', parameters('siteName'))]"
					],
					"properties": {
						"appSettingNames": [
							"APPLICATION_INSIGHTS_IKEY",
							"DOCKER_CUSTOM_IMAGE_NAME"
						]
					}
				},
				{
					"apiVersion": "2015-08-01",
					"name": "[parameters('slotName')]",
					"type": "slots",
					"location": "[resourceGroup().location]",
					"dependsOn": [
						"[resourceId('Microsoft.Web/sites/', parameters('siteName'))]",
						"[resourceId('Microsoft.Insights/components', variables('prodAppInsightsName'))]"
					],
					"properties": {
						"name": "[concat(parameters('siteName'), '(', parameters('slotName'), ')')]",
						"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
						"siteConfig": {
							"appSettings": [
								{
									"name": "WEBSITES_PORT",
									"value": "[parameters('dockerImagePort')]"
								},
								{
									"name": "DOCKER_CUSTOM_IMAGE_NAME",
									"value": "[concat(parameters('registryName'), '.azurecr.io/', parameters('dockerImageName'), ':latest')]"
								},
								{
									"name": "DOCKER_REGISTRY_SERVER_URL",
									"value": "[concat('https://', parameters('registryName'), '.azurecr.io')]"
								},
								{
									"name": "DOCKER_REGISTRY_SERVER_USERNAME",
									"value": "[parameters('registryName')]"
								},
								{
									"name": "DOCKER_REGISTRY_SERVER_PASSWORD",
									"value": "[listCredentials(resourceId(variables('acrResourceGroup'), 'Microsoft.ContainerRegistry/registries', parameters('registryName')), '2017-03-01').passwords[0].value]"
								},
								{
									"name": "APPLICATION_INSIGHTS_IKEY",
									"value": "[reference(concat('Microsoft.Insights/components/', variables('slotAppInsightsName')), '2015-05-01').InstrumentationKey]"
								},
								{
									"name": "MyShuttleDbServer",
									"value": "[concat(variables('serverName'), '.mysql.database.azure.com')]"
								},
								{
									"name": "MyShuttleDbUser",
									"value": "[concat(parameters('administratorLogin'), '@', variables('serverName'))]"
								},
								{
									"name": "MyShuttleDbPassword",
									"value": "[parameters('administratorLoginPassword')]"
								},
								{
									"name": "MyShuttleDbUseSSL",
									"value": "true"
								}
							]
						}
					},
					"tags": {
						"[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource"
					}
				}
			],
			"apiVersion": "2016-08-01",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
			]
		},
		{
			"apiVersion": "2014-08-01",
			"name": "[variables('prodAppInsightsName')]",
			"type": "Microsoft.Insights/components",
			"location": "eastus",
			"properties": {
				"ApplicationId": "[variables('prodAppInsightsName')]",
				"Application_Type": "other"
			}
		},
		{
			"apiVersion": "2014-08-01",
			"name": "[variables('slotAppInsightsName')]",
			"type": "Microsoft.Insights/components",
			"location": "eastus",
			"properties": {
				"ApplicationId": "[variables('slotAppInsightsName')]",
				"Application_Type": "other"
			}
		},
		{
			"apiVersion": "2016-09-01",
			"name": "[variables('hostingPlanName')]",
			"type": "Microsoft.Web/serverfarms",
			"location": "[resourceGroup().location]",
			"properties": {
				"name": "[variables('hostingPlanName')]",
				"workerSizeId": "1",
				"reserved": true,
				"numberOfWorkers": "1",
				"hostingEnvironment": ""
			},
			"sku": {
				"Tier": "Standard",
				"Name": "S1"
			},
			"kind": "linux"
		},
		{
			"apiVersion": "2016-02-01-privatepreview",
			"kind": "",
			"location": "[resourceGroup().location]",
			"name": "[variables('serverName')]",
			"properties": {
				"version": "[parameters('mysqlVersion')]",
				"administratorLogin": "[parameters('administratorLogin')]",
				"administratorLoginPassword": "[parameters('administratorLoginPassword')]",
				"storageMB": "[parameters('databaseSkuSizeMB')]"
			},
			"sku": {
				"name": "[parameters('databaseSkuName')]",
				"tier": "[parameters('databaseSkuTier')]",
				"capacity": "[parameters('databaseDTU')]",
				"size": "[parameters('databaseSkuSizeMB')]",
				"family": "SkuFamily"
			},
			"type": "Microsoft.DBforMySQL/servers",
			"resources": [
				{
					"type": "firewallrules",
					"apiVersion": "2016-02-01-privatepreview",
					"dependsOn": [
						"[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
					],
					"location": "[resourceGroup().location]",
					"name": "[concat(variables('serverName'),'firewall')]",
					"properties": {
						"startIpAddress": "0.0.0.0",
						"endIpAddress": "255.255.255.255"
					}
				},
				{
					"name": "[variables('databaseName')]",
					"type": "databases",
					"apiVersion": "2016-02-01-privatepreview",
					"properties": {
						"charset": "utf8",
						"collation": "utf8_general_ci"
					},
					"dependsOn": [
						"[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
					]
				}
			]
		}
	]
}